---
layout:     post
title:      "Kaggle: Right Whale identification"
date:       2015-12-29 12:00:00
category: nanodegree
tags: 
- machine-learning 

comments:   true
img: whale_banner.png
pr_category: Machine Learning
tools: Python, OpenCV, Sloth, AWS
github: https://github.com/alexbra/DAND-Right-Whale-Identification
---

I participated in a team of Udacity Data Analyst Nanodegree alumnies (DANDy Lions) to entry in Kaggle competition of identifying right whales. 

####Code source on GitHub
[https://github.com/alexbra/DAND-Right-Whale-Identification][github-whale] 

####Competition's page 
[https://www.kaggle.com/c/noaa-right-whale-recognition][kaggle]

####Applied technologies

Python, OpenCV, Sloth, AWS

###Description
Fewer than 500 North Atlantic right whales left in the world's oceans. There are more than 10000 aerial photos of them. The task is identify endangered right whales in aerial photographs.

We were divided in two teams by 4 people. One team wrote classifier to recognize whales on photos. Another one wrote whale's identifier. 
I was in "recognizers" team. Thus, I accomplish the following tasks:

- made annotations of photos by sloth and created positive and negative images
- built recognizer with OpenCV Cascade Classifier using AWS essentions
- created xml classifier 

####OpenCV code
```
opencv_createsamples -vec whale_faces.vec -num 4543 -info data.info -bg bg.txt -w 30 -h 30
opencv_traincascade -vec whale_faces.vec -w 30 -h 30 -data output/ -numPos 4000 -numNeg 6000 -bg bg.txt -numStages 12 -featureType LBP
```

####Python code

	import numpy as np
	import cv2
	from PIL import Image, ImageDraw
	whale_cascade = cv2.CascadeClassifier('/home/alex/ml/whaleclassifier/whale_classifier.xml')
	img = cv2.imread('/home/alex/ml/whaleclassifier/w_8488.jpg')
	gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
	whales = whale_cascade.detectMultiScale(gray, 1.2, 7, 0, (280, 280))
	imagefile = '/home/alex/ml/whaleclassifier/w_8488.jpg'
	im = Image.open(imagefile)
	dr = ImageDraw.Draw(im)
	for (x,y,w,h) in whales:
	    #we want our box outlines to be wider than a single pixel, so we use this loop
	    outline_width = 4
	    for i in range(outline_width):
		dr.rectangle(((x-i, y-i), (x+w+i, y+h+i)), outline = "red")
	im.save('/home/alex/ml/whaleclassifier/outimage.jpg')


As a result, I've got a classifier and apply it in Python code. 
Here's an example of recognizer's work:
![]({{ site.url }}/img/whale_squared.jpg)

  
Finally, our team obtained 117 place from 339 

Despite on average result, I satisfied of it. I've learnt new technologies (such as Sloth, OpenCV, Github forked flow), 
became Ubuntu user, met interesting people (we had an international team) and collaborated as a team member.

[kaggle]: https://www.kaggle.com/c/noaa-right-whale-recognition
[github-whale]: https://github.com/alexbra/DAND-Right-Whale-Identification
